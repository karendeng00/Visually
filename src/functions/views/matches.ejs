<!DOCTYPE html>
<html>
<head>
  <title>Match</title>
	<meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	
	<link rel="stylesheet" type="text/css" href="./../styles.css">

	<!--  scripts for general website format-->  
  	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
	
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	
    <!--   	handlebars for templating-->   
	<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.4.2/handlebars.js"></script> 
	 <script src="./handlebars.js"></script> <!-- helper function here -->

	
	  <!-- Icons -->
	  <script src="https://kit.fontawesome.com/862904df26.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
</head>
	
<body>
  <nav class="navbar navbar-default navbar-expand-lg fixed-top">
      <a class="navbar-brand" href="#">Spotify316</a>
	  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation"><i class="fa fa-reorder" style="color:white"></i>
	  </button>
	  <div class="collapse navbar-collapse" id="navbarNav">
		  <ul class="navbar-nav ml-auto">
			<li class="nav-item active"><a class="nav-link" href="./matches" style="color: white !important">Matches</a></li>
			<li class="nav-item"><a class="nav-link" href="#" style="color: white !important">Discover</a></li>
			<li class="nav-item"><a class="nav-link" href="/index.html" style="color: white !important"><i class="fas fa-user" style="color: white"></i> Profile</a></li>
			<li class="nav-item"><a class="nav-link" href="#"><i class="fas fa-comment-dots" style="color: white"></i></a></li>
			<li class="nav-item"><a class="nav-link" href="#"><i class="fas fa-bell" style="color: white"></i></a></li>
		  </ul>		  
	  </div>
    </nav>
	
	<div class="center-pane-margin">
		<div class="container">
<!--			<h1 class="gradient-text">Find your musical match!</h1>-->
			
			<div class="sidebar-match text-center">
				<h3>Compare</h3>
				<canvas id="myChart" width="400" height="400"></canvas><br>
				<div class="btn-group btn-group-toggle" data-toggle="buttons">
				  <label class="btn btn-light active">
					<input type="radio" onclick="topToggle()" name="options" id="option1" autocomplete="off" checked> Top Tracks
				  </label>
				  <label class="btn btn-light">
					<input type="radio" onclick="recentToggle()" name="options" id="option2" autocomplete="off"> Recent Trends
				  </label>
				</div>				
			</div>

			
			<div class="mainbar">
				<div class="row">
					<div class="card-deck">
						<% for(j=0; j<users.length; j++) { %>
 					 	<div class="col-lg-3" id="<%= users[j].id %>" style="margin:0px 0px 5px 0px !important; padding:0px !important;">
							<div class="card text-center" id="<%= users[j].id %>" style="border-radius: 25px; overflow:hidden; margin: 5px; box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.07), 0 6px 20px 0 rgba(0, 0, 0, 0.07);"> <!-- border: 1px solid #ff2323; -->
									<img class="card-img-top" src="<%= users[j].user_info.image %>" alt=" Profile Image" style="min-height:190px;">
									<h3 class="metric" id="<%= users[j].id %>" style="color: #ff2323; padding-top: 10px;">90%</h3>
								<div class="card-body" style="padding-top:0px !important;">
									<h5 class="card-title"><%= users[j].user_info.name %></h5>
									<button type="button" onclick="compareUser(<%= j %>)" class="btn btn-lightred btn-primary btn-sm">Compare</button>
									<button type="button" name="follow" class="btn btn-lightred btn-primary btn-sm"><i class='fas fa-user-plus' style='color:white'></i></button>
								</div>
							</div>	
						</div>
						<% } %>
					</div>
				</div>
			</div>
		</div>
	</div>
	<span id='userJSON' hidden>
    <%= JSON.stringify(users); %>
	</span>

	<script>
		var curr_users_map = {};
		var curr_users = JSON.parse($('#userJSON').text());
		$('#userJSON').remove();
		var user_self;
		for(var i = 0; i<curr_users.length; i++){
			if(curr_users[i].id == localStorage.getItem('uid')){
				user_self = curr_users[i];
				//break;
			} else {
				try{
					var id = curr_users[i].id;
					curr_users_map[id] = {
						"top":[
						curr_users[i].top_tracks.agg_features.acousticness,
						curr_users[i].top_tracks.agg_features.danceability,
						curr_users[i].top_tracks.agg_features.energy,
						curr_users[i].top_tracks.agg_features.instrumentalness,
						curr_users[i].top_tracks.agg_features.speechiness,
						curr_users[i].top_tracks.agg_features.valence
						],
						"recent":[
						curr_users[i].recent_tracks.agg_features.acousticness,
						curr_users[i].recent_tracks.agg_features.danceability,
						curr_users[i].recent_tracks.agg_features.energy,
						curr_users[i].recent_tracks.agg_features.instrumentalness,
						curr_users[i].recent_tracks.agg_features.speechiness,
						curr_users[i].recent_tracks.agg_features.valence
						]
					};
					console.log(curr_users_map['1245731874'].top[0]);
				} catch(e){
					continue;
				}
			}
		}
		//remove current user from "matches"
		$("#"+user_self.id+".card.text-center").remove();
		$("#"+user_self.id+".col-lg-3").remove();


		var top_toggle_elem = document.getElementById('option1');
		var recent_toggle_elem = document.getElementById('option2');
		top_toggle_elem.addEventListener("click", topMetric);
		recent_toggle_elem.addEventListener("click", recentMetric);


		// const breakdownButton = document.querySelectorAll('.metric');
		// 	breakdownButton.forEach(function(btn) {
		// 	  btn.addEventListener('onload', function() {
			    
		// 	  });
		// 	});




		var user_self_top_data = [
			user_self.top_tracks.agg_features.acousticness,
		   user_self.top_tracks.agg_features.danceability,
		   user_self.top_tracks.agg_features.energy,
		   user_self.top_tracks.agg_features.instrumentalness,
		   user_self.top_tracks.agg_features.speechiness,
		   user_self.top_tracks.agg_features.valence];

		var user_self_recent_data = [
			user_self.recent_tracks.agg_features.acousticness,
			user_self.recent_tracks.agg_features.danceability,
			user_self.recent_tracks.agg_features.energy,
			user_self.recent_tracks.agg_features.instrumentalness,
			user_self.recent_tracks.agg_features.speechiness,
			user_self.recent_tracks.agg_features.valence,
		];

		var selected_user_top_data = [];

		var selected_user_recent_data = [];

		topMetric();
				
		function compareUser(j) {
			console.log(j);
			console.log(curr_users[j]);
			var label = curr_users[j].user_info.name+"'s data";
			selected_user_top_data = [curr_users[j].top_tracks.agg_features.acousticness,
						   curr_users[j].top_tracks.agg_features.danceability,
						   curr_users[j].top_tracks.agg_features.energy,
						   curr_users[j].top_tracks.agg_features.instrumentalness,
						   curr_users[j].top_tracks.agg_features.speechiness,
						   curr_users[j].top_tracks.agg_features.valence];
			selected_user_recent_data = [curr_users[j].recent_tracks.agg_features.acousticness,
						   curr_users[j].recent_tracks.agg_features.danceability,
						   curr_users[j].recent_tracks.agg_features.energy,
						   curr_users[j].recent_tracks.agg_features.instrumentalness,
						   curr_users[j].recent_tracks.agg_features.speechiness,
						   curr_users[j].recent_tracks.agg_features.valence];
			addData(myChart, label, selected_user_top_data);
		}
		
	/*	function getActive(){
			console.log( document.querySelector('.option_gender:checked').value );
		}
		document.querySelectorAll(".option_gender").forEach( input => input.addEventListener('click', getActive) );		*/

		var ctx = document.getElementById('myChart').getContext('2d');
		var myChart = new Chart(ctx, {
			type: 'radar',
			data: {
				labels: ['acousticness', 'danceability', 'energy', 'instrumentalness', 'speechiness', 'valence'],
				datasets: [{
					label: "Your data",
					data: user_self_top_data,
					// data: [user_self.top_tracks.agg_features.acousticness,
					// 	   user_self.top_tracks.agg_features.danceability,
					// 	   user_self.top_tracks.agg_features.energy,
					// 	   user_self.top_tracks.agg_features.instrumentalness,
					// 	   user_self.top_tracks.agg_features.speechiness,
					// 	   user_self.top_tracks.agg_features.valence],
					
					backgroundColor: 'rgba(255, 99, 132, 0.2)',
					borderColor: 'rgba(255, 99, 132, 1)',
					borderWidth: 1
				}
		      ]
			},
			options: {
				scales: {
				}
			}
		});
		
		function addData(chart, label, data) {
			if(chart.data.datasets.length == 2){
				chart.data.datasets.pop();
			}
			var new_user_data = {
				label : label,
				data : data,
				backgroundColor : 'rgba(75, 192, 192, 0.2)',
				borderColor : 'rgba(75, 192, 192, 1)',
				borderWidth: 1
			}
			chart.data.datasets.push(new_user_data);
			chart.update();
		}

		function removeData(chart) {
			chart.data.labels.pop();
			chart.data.datasets.forEach((dataset) => {
				dataset.data.pop();
			});
			chart.update();
		}


		function topToggle() {
		    myChart.data.datasets[0].data = user_self_top_data;
		    myChart.data.datasets[1].data = selected_user_top_data;
		    myChart.update();
		}

		function recentToggle() {
		    myChart.data.datasets[0].data = user_self_recent_data;
		    myChart.data.datasets[1].data = selected_user_recent_data;
		    myChart.update();
		}

		function cosineSim(A,B){
		    var dotproduct=0;
		    var mA=0;
		    var mB=0;
		    for(i = 0; i < A.length; i++){ // here you missed the i++
		        dotproduct += (A[i] * B[i]);
		        mA += (A[i]*A[i]);
		        mB += (B[i]*B[i]);
		    }
		    mA = Math.sqrt(mA);
		    mB = Math.sqrt(mB);
		    var similarity = (dotproduct)/((mA)*(mB)) // here you needed extra brackets
		    return similarity;
		}

		function recentMetric(){
			var elements = document.getElementsByClassName("metric");
			for(var i = 0; i<elements.length; i++){
				var id = elements[i].id;
				try{
					var recent_agg = curr_users_map[id]["recent"];
					var percentage =Math.floor(cosineSim(user_self_recent_data,recent_agg) * 100);
					elements[i].innerText = percentage +"%";
				} catch(e){
					continue;
				}
			}
		}

		function topMetric(){
			var elements = document.getElementsByClassName("metric");
			for(var i = 0; i<elements.length; i++){
				var id = elements[i].id;
				try{
					var top_agg = curr_users_map[id]["top"];
					var percentage =Math.floor(cosineSim(user_self_top_data,top_agg) * 100);
					elements[i].innerText = percentage +"%";
				} catch(e){
					continue;
				}
			}
		}
	</script>

		
<!-- 	</script>
 -->	
  
	<!-- Bootstrap JS -->
	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
	
	<script type="text/javascript" src="login.js"></script> 
</body>
</html>